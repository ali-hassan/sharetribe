- content_for :extra_javascript do
  :javascript
    // Search filter JS Start
    const $menu = $('.toogleContainer');
    $(document).mouseup(function (e) {
      if (!$menu.is(e.target) // if the target of the click isn't the container...
        &&
        $menu.has(e.target).length === 0) // ... nor a descendant of the container
      {
        $menu.hide();
      }
    });
    $('.toogleFltr').on('click', function (e) {
      $(this).parent().siblings().find('.toogleContainer').hide();
      $(this).next('.toogleContainer').toggle();

    });
    
- maps_key = MarketplaceHelper.google_maps_key(@current_community.id)
- key_param = maps_key ? "&key=#{maps_key}" : ""
- # Topbar adds its own maps script, otherwise add it if location search enabled or map is visible
= javascript_include_tag "//maps.googleapis.com/maps/api/js?libraries=places#{key_param}"
= javascript_include_tag "markerclusterer.js"
= javascript_include_tag "https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"

- content_for :javascript do
  initialize_homepage();

- content_for :coverfade_class do
  = "without-text"

- content_for :extra_javascript do
  - # maps.google can't be loaded twice
  - maps_key = MarketplaceHelper.google_maps_key(@current_community.id)
  - key_param = maps_key ? "&key=#{maps_key}" : ""
  - # Topbar adds its own maps script, otherwise add it if location search enabled or map is visible
  - needs_maps = !FeatureFlagHelper.feature_enabled?(:topbar_v1) && (main_search != :keyword || @view_type.eql?("map"))
  - if(needs_maps)
    = javascript_include_tag "//maps.googleapis.com/maps/api/js?libraries=places#{key_param}"
  - if(@view_type.eql?("map"))
    = javascript_include_tag "markerclusterer.js"

- content_for(:head) do
  - if seo_pagination_links[:prev].present?
    %link{rel: "prev", href: seo_pagination_links[:prev]}
  - if seo_pagination_links[:next].present?
    %link{rel: "next", href: seo_pagination_links[:next]}

- if @current_community.private? && @big_cover_photo
  - if @community_customization && @community_customization.private_community_homepage_content
    = @community_customization.private_community_homepage_content.html_safe
  - else
    = t(".this_is_private_community")

- else
  = render partial: 'landing_page/main_header'

  %section.explore_section.paddingTB90
    .container.listings_flex_container
      .row.width-50
        .do-nicescrol
          .row.filterPanel
            .col-md-3
              .categoryFilter
                .btnCategory.text-center.toogleFltr
                  - if selected_category
                    = selected_category.display_name(I18n.locale)
                  - else
                    Category
                .toogleContainer
                  .col-12{:style => "display:grid;"}
                    = link_to t("homepage.filters.all_categories"), search_path(search_params.merge({category: "all"}))
                    - @main_categories.each do |category|
                      = link_to category.display_name(I18n.locale), search_path(search_params.merge({category: category}))
                      - if category.children
                        - category.children.each do |child|
                          - is_selected = selected_category == child
                          = link_to child.display_name(I18n.locale), search_path(search_params.merge({city: child})), :class => "toggle-menu-subitem"
            .col-md-3
              %form{:action => "/s"}
                .moreFilter
                  .btnCategory.text-center.toogleFltr More Filters
                  .toogleContainer
                    - filters.each do |field|
                      - field.with_type do |type|
                        - if [:dropdown, :checkbox].include?(type)
                          .col-12
                            .custom-filter-title
                              = field.name(I18n.locale)
                            - field.options.sort.each do |option|
                              - param_name = type == :dropdown ? CustomFieldSearchParams.dropdown_param_name(option.id) : CustomFieldSearchParams.checkbox_param_name(option.id)
                              .custom-filter-options
                                .custom-filter-checkbox-container
                                  %label.custom-filter-checkbox-label
                                    = option.title(I18n.locale)
                                    = check_box_tag param_name, "#{option.id}", params[param_name]
                                    / <input type="checkbox" name="checkbox_filter_option_11" id="checkbox_filter_option_11" value="11">
                                    %span.custom-filter-checkbox-label-text
                    %button{:type => "submit"} Update view
          .row.panelmrgRt0
            - if @listings.total_entries > 0
              .search-listings
                = render partial: "custom_item", collection: @listings, as: :listing, locals: { show_distance: location_search_in_use }
              .home-loading-more
                = will_paginate(@listings)
                = pageless(@listings.total_pages, '.search-listings', current_search_path_without_page, t('.loading_more_content'), current_page)
            - else
              .home-no-listings
                - if params[:q] || params[:category] || params[:share_type] # Some filter in use
                  .no_listing_text
                    = t(".no_listings_with_your_search_criteria")
                - else
                  = t(".no_listings_notification", add_listing_link: link_to(t(".add_listing_link_text"), new_listing_path(ref: "add_listing_link"))).html_safe
      - if @listings.total_entries > 0
        .col-md-5.col-xs-12.map-container.paddingLeft0
          .home-map
            = render :partial => "map", locals: { viewport: viewport }
